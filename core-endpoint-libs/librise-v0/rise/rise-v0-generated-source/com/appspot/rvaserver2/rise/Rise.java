/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-07-22 21:53:01 UTC)
 * on 2014-09-30 at 18:39:05 UTC 
 * Modify at your own risk.
 */

package com.appspot.rvaserver2.rise;

/**
 * Service definition for Rise (v0).
 *
 * <p>
 * Rise Core API (for internal use only)
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link RiseRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Rise extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the Rise Core API (for internal use only) library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://rvaserver2.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "rise/v0/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Rise(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Rise(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Account collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rise rise = new Rise(...);}
   *   {@code Rise.Account.List request = rise.account().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Account account() {
    return new Account();
  }

  /**
   * The "account" collection of methods.
   */
  public class Account {

    /**
     * Create a request for the method "account.add".
     *
     * This request holds the parameters needed by the rise server.  After setting any optional
     * parameters, call the {@link Add#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Add add() throws java.io.IOException {
      Add result = new Add();
      initialize(result);
      return result;
    }

    public class Add extends RiseRequest<com.appspot.rvaserver2.rise.model.NewAccountResponse> {

      private static final String REST_PATH = "account";

      /**
       * Create a request for the method "account.add".
       *
       * This request holds the parameters needed by the the rise server.  After setting any optional
       * parameters, call the {@link Add#execute()} method to invoke the remote operation. <p> {@link
       * Add#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Add() {
        super(Rise.this, "PUT", REST_PATH, null, com.appspot.rvaserver2.rise.model.NewAccountResponse.class);
      }

      @Override
      public Add setAlt(java.lang.String alt) {
        return (Add) super.setAlt(alt);
      }

      @Override
      public Add setFields(java.lang.String fields) {
        return (Add) super.setFields(fields);
      }

      @Override
      public Add setKey(java.lang.String key) {
        return (Add) super.setKey(key);
      }

      @Override
      public Add setOauthToken(java.lang.String oauthToken) {
        return (Add) super.setOauthToken(oauthToken);
      }

      @Override
      public Add setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Add) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Add setQuotaUser(java.lang.String quotaUser) {
        return (Add) super.setQuotaUser(quotaUser);
      }

      @Override
      public Add setUserIp(java.lang.String userIp) {
        return (Add) super.setUserIp(userIp);
      }

      @Override
      public Add set(String parameterName, Object value) {
        return (Add) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "account.agreeToTerms".
     *
     * This request holds the parameters needed by the rise server.  After setting any optional
     * parameters, call the {@link AgreeToTerms#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public AgreeToTerms agreeToTerms() throws java.io.IOException {
      AgreeToTerms result = new AgreeToTerms();
      initialize(result);
      return result;
    }

    public class AgreeToTerms extends RiseRequest<com.appspot.rvaserver2.rise.model.APIResponse> {

      private static final String REST_PATH = "account";

      /**
       * Create a request for the method "account.agreeToTerms".
       *
       * This request holds the parameters needed by the the rise server.  After setting any optional
       * parameters, call the {@link AgreeToTerms#execute()} method to invoke the remote operation. <p>
       * {@link
       * AgreeToTerms#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected AgreeToTerms() {
        super(Rise.this, "POST", REST_PATH, null, com.appspot.rvaserver2.rise.model.APIResponse.class);
      }

      @Override
      public AgreeToTerms setAlt(java.lang.String alt) {
        return (AgreeToTerms) super.setAlt(alt);
      }

      @Override
      public AgreeToTerms setFields(java.lang.String fields) {
        return (AgreeToTerms) super.setFields(fields);
      }

      @Override
      public AgreeToTerms setKey(java.lang.String key) {
        return (AgreeToTerms) super.setKey(key);
      }

      @Override
      public AgreeToTerms setOauthToken(java.lang.String oauthToken) {
        return (AgreeToTerms) super.setOauthToken(oauthToken);
      }

      @Override
      public AgreeToTerms setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AgreeToTerms) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AgreeToTerms setQuotaUser(java.lang.String quotaUser) {
        return (AgreeToTerms) super.setQuotaUser(quotaUser);
      }

      @Override
      public AgreeToTerms setUserIp(java.lang.String userIp) {
        return (AgreeToTerms) super.setUserIp(userIp);
      }

      @Override
      public AgreeToTerms set(String parameterName, Object value) {
        return (AgreeToTerms) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Company collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rise rise = new Rise(...);}
   *   {@code Rise.Company.List request = rise.company().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Company company() {
    return new Company();
  }

  /**
   * The "company" collection of methods.
   */
  public class Company {

    /**
     * Create a request for the method "company.get".
     *
     * This request holds the parameters needed by the rise server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Get get() throws java.io.IOException {
      Get result = new Get();
      initialize(result);
      return result;
    }

    public class Get extends RiseRequest<com.appspot.rvaserver2.rise.model.APIResponse> {

      private static final String REST_PATH = "company";

      /**
       * Create a request for the method "company.get".
       *
       * This request holds the parameters needed by the the rise server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Get() {
        super(Rise.this, "GET", REST_PATH, null, com.appspot.rvaserver2.rise.model.APIResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public Get setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "company.set".
     *
     * This request holds the parameters needed by the rise server.  After setting any optional
     * parameters, call the {@link Set#execute()} method to invoke the remote operation.
     *
     * @param isSeller
     * @return the request
     */
    public Set set(java.lang.Boolean isSeller) throws java.io.IOException {
      Set result = new Set(isSeller);
      initialize(result);
      return result;
    }

    public class Set extends RiseRequest<com.appspot.rvaserver2.rise.model.APIResponse> {

      private static final String REST_PATH = "company";

      /**
       * Create a request for the method "company.set".
       *
       * This request holds the parameters needed by the the rise server.  After setting any optional
       * parameters, call the {@link Set#execute()} method to invoke the remote operation. <p> {@link
       * Set#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param isSeller
       * @since 1.13
       */
      protected Set(java.lang.Boolean isSeller) {
        super(Rise.this, "POST", REST_PATH, null, com.appspot.rvaserver2.rise.model.APIResponse.class);
        this.isSeller = com.google.api.client.util.Preconditions.checkNotNull(isSeller, "Required parameter isSeller must be specified.");
      }

      @Override
      public Set setAlt(java.lang.String alt) {
        return (Set) super.setAlt(alt);
      }

      @Override
      public Set setFields(java.lang.String fields) {
        return (Set) super.setFields(fields);
      }

      @Override
      public Set setKey(java.lang.String key) {
        return (Set) super.setKey(key);
      }

      @Override
      public Set setOauthToken(java.lang.String oauthToken) {
        return (Set) super.setOauthToken(oauthToken);
      }

      @Override
      public Set setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Set) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Set setQuotaUser(java.lang.String quotaUser) {
        return (Set) super.setQuotaUser(quotaUser);
      }

      @Override
      public Set setUserIp(java.lang.String userIp) {
        return (Set) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isSeller;

      /**

       */
      public java.lang.Boolean getIsSeller() {
        return isSeller;
      }

      public Set setIsSeller(java.lang.Boolean isSeller) {
        this.isSeller = isSeller;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public Set setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @Override
      public Set set(String parameterName, Object value) {
        return (Set) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Rise}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Rise}. */
    @Override
    public Rise build() {
      return new Rise(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link RiseRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setRiseRequestInitializer(
        RiseRequestInitializer riseRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(riseRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
